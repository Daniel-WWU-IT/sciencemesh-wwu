# Forward all insecure traffic to a secure connection
server {
    listen                      80;
    server_name                 sciencemesh-test.uni-muenster.de;
    return                      301 https://$server_name$request_uri;
}

# Secure connection: Reverse proxy for all ScienceMesh http services
server  {
    listen                      443;
    server_name                 sciencemesh-test.uni-muenster.de;
    ssl                         on;
    ssl_certificate             /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.cert;
    ssl_trusted_certificate     /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.full.cert;
    ssl_certificate_key         /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.key;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_stapling                on;
    ssl_stapling_verify         on;

    dav_methods                 PUT DELETE MKCOL COPY MOVE;
    dav_ext_methods             PROPFIND OPTIONS;
    dav_access                  user:rw group:rw all:rw;

    proxy_redirect              off;
    proxy_set_header            Host $host;
    proxy_set_header            X-Real-IP $remote_addr;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;

    # GOCDB API
    location ^~ /gocdb/gocdbpi {
        rewrite                 /gocdb/gocdbpi/(.*) /gocdbpi/$1 break;
        proxy_pass              http://localhost:8080;
    }

    # GOCDB
    location ^~ /gocdb {
        rewrite                 /gocdb/(.*) /gocdb/$1 break;
        proxy_pass              http://localhost:8080;
    }

    # Collabora main websocket
    location ~ ^/lool/(.*)/ws$ {
        proxy_pass              http://zivsddc101a:30166;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "Upgrade";
        proxy_set_header        Host $http_host;
        proxy_read_timeout      36000s;
    }

    # Collabora admin Console websocket
    location ^~ /lool/adminws {
        proxy_pass              http://zivsddc101a:30166;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "Upgrade";
        proxy_set_header        Host $http_host;
        proxy_read_timeout      36000s;
    }

    # Collabora operations
    location ~ ^/lool {
        proxy_pass              http://zivsddc101a:30166;
    }

    # Forward everything else into the Kubernetes cluster
    location / {
        proxy_set_header        Authorization $http_authorization;
        proxy_pass_header       Authorization;
        proxy_pass              http://zivsddc101a:30166/;
    }
}

# Secure connection: Reverse proxy for the ScienceMesh gRPC service
server  {
    listen                      9600 http2;
    server_name                 sciencemesh-test.uni-muenster.de;
    ssl                         on;
    ssl_certificate             /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.cert;
    ssl_trusted_certificate     /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.full.cert;
    ssl_certificate_key         /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.key;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_stapling                on;
    ssl_stapling_verify         on;

    # gRPC
    location / {
        grpc_pass               grpc://zivsddc101a:30166;
    }
}

# Overleaf
server  {
    listen                      9998;
    server_name                 sciencemesh-test.uni-muenster.de;
    ssl                         on;
    ssl_certificate             /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.cert;
    ssl_trusted_certificate     /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.full.cert;
    ssl_certificate_key         /etc/nginx/ssl/sciencemesh-test.uni-muenster.de.key;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_stapling                on;
    ssl_stapling_verify         on;

    # Overleaf
    location / {
        proxy_pass              http://localhost:8199;
    }
}
