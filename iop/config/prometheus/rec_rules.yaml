# -- Health checking recording rules --

# For every service (type), a boolean is calculated based on fixed rules for each of the three possible states (OK, WARN, CRIT).
# This value is then multiplied by 1, 2, or 3, respectively. The maximum value of these three determines the overall service status.

# Notes:
#   The min operator acts as a logical AND operation
#   The max operator acts as a logical OR operation
#
#   If a site doesn't have expose a certain service type to monitoring (e.g., the service type is optional), the respective metrics
#   will be missing and thus not influence check results (i.e., missing service types are ignored). Service types are therefore
#   independently evaluated.

groups:
  - name: sciencemesh-hcheck
    rules:
    # -- GATEWAY rules --
    - record: sciencemesh_hcheck_service_status
      # OK: GATEWAY -> Ping & network max. at warning, login & fs operations + speed must be ok
      #     MESHDIR -> Ping must be ok
      expr: >-
          min by (site_id,site,service_type) (
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="GATEWAY"} <=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-network",        service_type="GATEWAY"} <=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-iop-login",      service_type="GATEWAY"} ==bool 0) or
          (probe_nagios_result{job="sciencemesh-hcheck-fs-operations",  service_type="GATEWAY"} ==bool 0) or
          (probe_nagios_result{job="sciencemesh-hcheck-fs-speed",       service_type="GATEWAY"} <=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="MESHDIR"} ==bool 0)
          ) * 1
      labels:
        status_type: OK
    - record: sciencemesh_hcheck_service_status
      # WARN: GATEWAY -> Ping & network max. at warning, login or fs operations at warning, fs speed at warning or error
      #       MESHDIR -> Ping at warning
      expr: >-
          min by (site_id,site,service_type) (
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="GATEWAY"} <=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-network",        service_type="GATEWAY"} <=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-iop-login",      service_type="GATEWAY"} ==bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-fs-operations",  service_type="GATEWAY"} ==bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-fs-speed",       service_type="GATEWAY"} >=bool 1) or
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="MESHDIR"} ==bool 1)
          ) * 2
      labels:
        status_type: WARN
    - record: sciencemesh_hcheck_service_status
      # CRIT: GATEWAY -> Any probe (except fs speed) at error or unknown
      #       MESHDIR -> Ping at error or unknown
      expr: >-
          max by (site_id,site,service_type) (
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="GATEWAY"} >=bool 2) or
          (probe_nagios_result{job="sciencemesh-hcheck-network",        service_type="GATEWAY"} >=bool 2) or
          (probe_nagios_result{job="sciencemesh-hcheck-iop-login",      service_type="GATEWAY"} >=bool 2) or
          (probe_nagios_result{job="sciencemesh-hcheck-fs-operations",  service_type="GATEWAY"} >=bool 2) or
          (probe_nagios_result{job="sciencemesh-hcheck-http-ping",      service_type="MESHDIR"} >=bool 2)
          ) * 3
      labels:
        status_type: CRIT

    # -- Overall service status --
    - record: sciencemesh_hcheck_service_status
      # The highest status is the final status of the service (the higher, the worse)
      expr: max by (site_id,site,service_type) (sciencemesh_hcheck_service_status{status_type=~"OK|WARN|CRIT"})
      labels:
        status_type: RESULT
    - record: sciencemesh_hcheck_service_status
      # A service is considered to be UP if it is either in an OK or WARN state
      expr: sciencemesh_hcheck_service_status{status_type="RESULT"} <=bool 2
      labels:
        status_type: UP

    # -- Site rules --
    - record: sciencemesh_hcheck_site_status
      # OK: GATEWAY -> OK
      #     MESHDIR -> OK
      expr: >-
          min by (site_id,site) (
          (sciencemesh_hcheck_service_status{service_type="GATEWAY", status_type="RESULT"} ==bool 1) or
          (sciencemesh_hcheck_service_status{service_type="MESHDIR", status_type="RESULT"} ==bool 1)
          ) * 1
      labels:
        status_type: OK
    - record: sciencemesh_hcheck_site_status
      # WARN: GATEWAY -> WARN
      #       MESHDIR -> WARN
      expr: >-
          max by (site_id,site) (
          (sciencemesh_hcheck_service_status{service_type="GATEWAY", status_type="RESULT"} ==bool 2) or
          (sciencemesh_hcheck_service_status{service_type="MESHDIR", status_type="RESULT"} ==bool 2)
          ) * 2
      labels:
        status_type: WARN
    - record: sciencemesh_hcheck_site_status
      # CRIT: GATEWAY -> CRIT
      #       MESHDIR -> CRIT
      expr: >-
          max by (site_id,site) (
          (sciencemesh_hcheck_service_status{service_type="GATEWAY", status_type="RESULT"} ==bool 3) or
          (sciencemesh_hcheck_service_status{service_type="MESHDIR", status_type="RESULT"} ==bool 3)
          ) * 3
      labels:
        status_type: CRIT

    # -- Overall site status --
    - record: sciencemesh_hcheck_site_status
      # The highest status is the final status of the site (the higher, the worse)
      expr: max by (site_id,site) (sciencemesh_hcheck_service_status{status_type=~"OK|WARN|CRIT"})
      labels:
        status_type: RESULT
    - record: sciencemesh_hcheck_site_status
      # A site is considered to be UP if it is either in an OK or WARN state
      expr: sciencemesh_hcheck_site_status{status_type="RESULT"} <=bool 2
      labels:
        status_type: UP

    # -- Availabilities --
    # Availability is the relative time of being in an UP state over the course of 30 days
    - record: sciencemesh_hcheck_service_status
      expr: sum_over_time(sciencemesh_hcheck_service_status{status_type="UP"}[30d]) / count_over_time(sciencemesh_hcheck_service_status{status_type="UP"}[30d])
      labels:
        status_type: AVAIL
    - record: sciencemesh_hcheck_site_status
      expr: sum_over_time(sciencemesh_hcheck_site_status{status_type="UP"}[30d]) / count_over_time(sciencemesh_hcheck_site_status{status_type="UP"}[30d])
      labels:
        status_type: AVAIL

    # -- Reliability status --
    # Record the UP status with respect to scheduled downtimes
    - record: sciencemesh_hcheck_site_reliablity_status
      expr: sciencemesh_hcheck_site_status{status_type="UP"} and on(site_id,site) revad_site_is_scheduled == 1

    # -- Reliabilities --
    # Reliability is the relative time with respect to scheduled downtimes of being in an UP state over the course of 30 days
    - record: sciencemesh_hcheck_site_status
      expr: sum_over_time(sciencemesh_hcheck_site_reliablity_status[30d]) / count_over_time(sciencemesh_hcheck_site_reliablity_status[30d])
      labels:
        status_type: RELIAB
